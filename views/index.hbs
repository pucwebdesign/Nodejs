<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Socket.io</title>

        <style>
            body { margin: 0; padding-bottom: 3rem; font-family: -apple-system,
            BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial,
            sans-serif; }; #form { background: rgba(0, 0, 0, 0.15); padding:
            0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display:
            flex; height: 3rem; box-sizing: border-box; backdrop-filter:
            blur(10px); } #input { border: none; padding: 0 1rem; flex-grow: 1;
            border-radius: 2rem; margin: 0.25rem; } #input:focus { outline:
            none; } #form > button { background: #333; border: none; padding: 0
            1rem; margin: 0.25rem; border-radius: 3px; outline: none; color:
            #fff; } #messages { list-style-type: none; margin: 0; padding: 0; }
            #messages > li { padding: 0.5rem 1rem; } #messages >
            li:nth-child(odd) { background: #efefef; }
        </style>
    </head>
    <body>
        <ul id="messages"></ul>
        <form id="comment-form">
            <label for="author">Nome:</label><br />
            <input type="text" id="author" name="author" required /><br />

            <label for="comment">Coment√°rio:</label><br />
            <input type="text" id="comment" name="comment" required /><br />
            <button type="submit">Enviar</button>
        </form>

        <script src="/socket.io/socket.io.js"></script>
        <script>
            const socket = io("http://localhost:3000");
            const messageForm = document.getElementById("comment-form");

            messageForm.onsubmit = ((event)=>{
                event.preventDefault();

                const author = document.getElementById("author")
                const comment = document.getElementById("comment")
                const data = {author: author.value,comment: comment.value}

                renderMessage(data)
                socket.emit('sendMessage', data)
            })

            const messagesList = document.getElementById("messages");


            socket.on("allSentMessages", (data) => {
                renderMessage(data);
            });


            const renderMessage = (message) => {
                const messageUnit = document.createElement("li");
                messageUnit.innerHTML = `<strong>${message.author}</strong>: ${message.comment}`
                messagesList.append(messageUnit)
            }
        </script>
    </body>
</html>